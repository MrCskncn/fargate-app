version: 0.2

phases:
  pre_build:
    commands:
      - REGION=us-east-1
      - aws --version
      - jq --version
      - echo $CODEBUILD_WEBHOOK_EVENT
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $REGION)
      - REPOSITORY_URI=365058442801.dkr.ecr.us-east-1.amazonaws.com/serverlessvecloud
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - NEW_IMAGE=$REPOSITORY_URI:$IMAGE_TAG
  build:
    commands:
      - echo Build started on `date`
      - mvn package
      - echo Building the Docker image...          
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed
      - echo Pushing the Docker images...
      - |
          if expr "${CODEBUILD_SOURCE_VERSION}" : '^master.*' >/dev/null; then
            echo Pushing latest version since the branch is master...
            docker push $REPOSITORY_URI:latest
          else
            echo Branch is not master, so latest tag wont be updated.
          fi
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$ENV-$APP" --region $REGION)
      - NEW_TASK_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$NEW_IMAGE" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities)')
      - echo Registering new task...
      - NEW_TASK_INFO=$(aws ecs register-task-definition --region $REGION --cli-input-json "$NEW_TASK_DEFINTIION")
      - NEW_REVISION=$(echo $NEW_TASK_INFO | jq '.taskDefinition.revision')
      - |
          if expr "${CODEBUILD_SOURCE_VERSION}" : '^master.*' >/dev/null; then
            echo Deploying master version...
            aws ecs update-service --cluster $CLUSTER_NAME --service "$ENV-$APP-service" --task-definition "$ENV-$APP:${NEW_REVISION}"
          else
            echo Nothing to-do!
          fi
      - echo All success!
